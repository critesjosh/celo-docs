(window.webpackJsonp=window.webpackJsonp||[]).push([[259],{606:function(t,e,a){"use strict";a.r(e);var c=a(42),n=Object(c.a)({},(function(){var t=this,e=t.$createElement,a=t._self._c||e;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"external-module-identity-claims-account"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#external-module-identity-claims-account"}},[t._v("#")]),t._v(' External module: "identity/claims/account"')]),t._v(" "),a("h2",{attrs:{id:"index"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#index"}},[t._v("#")]),t._v(" Index")]),t._v(" "),a("h3",{attrs:{id:"type-aliases"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-aliases"}},[t._v("#")]),t._v(" Type aliases")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/reference/modules/_identity_claims_account_.html#accountclaim"}},[t._v("AccountClaim")])],1)]),t._v(" "),a("h3",{attrs:{id:"variables"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/reference/modules/_identity_claims_account_.html#const-accountclaimtype"}},[t._v("AccountClaimType")])],1),t._v(" "),a("li",[a("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/reference/modules/_identity_claims_account_.html#const-accountclaimtypeh"}},[t._v("AccountClaimTypeH")])],1)]),t._v(" "),a("h3",{attrs:{id:"functions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("ul",[a("li",[a("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/reference/modules/_identity_claims_account_.html#const-createaccountclaim"}},[t._v("createAccountClaim")])],1)]),t._v(" "),a("h2",{attrs:{id:"type-aliases-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#type-aliases-2"}},[t._v("#")]),t._v(" Type aliases")]),t._v(" "),a("h3",{attrs:{id:"accountclaim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accountclaim"}},[t._v("#")]),t._v(" AccountClaim")]),t._v(" "),a("p",[t._v("Ƭ "),a("strong",[t._v("AccountClaim")]),t._v(": "),a("em",[t._v("t.TypeOf‹typeof AccountClaimTypeH›")])]),t._v(" "),a("p",[a("em",[t._v("Defined in "),a("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/blob/master/packages/contractkit/src/identity/claims/account.ts#L34",target:"_blank",rel:"noopener noreferrer"}},[t._v("packages/contractkit/src/identity/claims/account.ts:34"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"variables-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#variables-2"}},[t._v("#")]),t._v(" Variables")]),t._v(" "),a("h3",{attrs:{id:"const-accountclaimtype"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-accountclaimtype"}},[t._v("#")]),t._v(" "),a("code",[t._v("Const")]),t._v(" AccountClaimType")]),t._v(" "),a("p",[t._v("• "),a("strong",[t._v("AccountClaimType")]),t._v(": "),a("em",[t._v("Type‹object, any, unknown›")]),t._v(" = new t.Type<AccountClaim, any, unknown>(\n'AccountClaimType',\nAccountClaimTypeH.is,\n(unknownValue, context) =>\neither.chain(AccountClaimTypeH.validate(unknownValue, context), (claim) => {\nif (claim.publicKey === undefined) {\nreturn t.success(claim)\n}\nconst derivedAddress = toChecksumAddress(\n'0x' + pubToAddress(Buffer.from(claim.publicKey.slice(2), 'hex'), true).toString('hex')\n)\nreturn derivedAddress === claim.address\n? t.success(claim)\n: t.failure(claim, context, 'public key did not match the address in the claim')\n}),\n(x) => x\n)")]),t._v(" "),a("p",[a("em",[t._v("Defined in "),a("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/blob/master/packages/contractkit/src/identity/claims/account.ts#L16",target:"_blank",rel:"noopener noreferrer"}},[t._v("packages/contractkit/src/identity/claims/account.ts:16"),a("OutboundLink")],1)])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"const-accountclaimtypeh"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-accountclaimtypeh"}},[t._v("#")]),t._v(" "),a("code",[t._v("Const")]),t._v(" AccountClaimTypeH")]),t._v(" "),a("p",[t._v("• "),a("strong",[t._v("AccountClaimTypeH")]),t._v(": "),a("em",[t._v("TypeC‹object›")]),t._v(" = t.type({\ntype: t.literal(ClaimTypes.ACCOUNT),\ntimestamp: TimestampType,\naddress: AddressType,\n// io-ts way of defining optional key-value pair\npublicKey: t.union([t.undefined, PublicKeyType]),\n})")]),t._v(" "),a("p",[a("em",[t._v("Defined in "),a("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/blob/master/packages/contractkit/src/identity/claims/account.ts#L8",target:"_blank",rel:"noopener noreferrer"}},[t._v("packages/contractkit/src/identity/claims/account.ts:8"),a("OutboundLink")],1)])]),t._v(" "),a("h2",{attrs:{id:"functions-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#functions-2"}},[t._v("#")]),t._v(" Functions")]),t._v(" "),a("h3",{attrs:{id:"const-createaccountclaim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#const-createaccountclaim"}},[t._v("#")]),t._v(" "),a("code",[t._v("Const")]),t._v(" createAccountClaim")]),t._v(" "),a("p",[t._v("▸ "),a("strong",[t._v("createAccountClaim")]),t._v("("),a("code",[t._v("address")]),t._v(": string, "),a("code",[t._v("publicKey?")]),t._v(": undefined | string): "),a("em",[a("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/reference/modules/_identity_claims_account_.html#accountclaim"}},[t._v("AccountClaim")])],1)]),t._v(" "),a("p",[a("em",[t._v("Defined in "),a("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/blob/master/packages/contractkit/src/identity/claims/account.ts#L36",target:"_blank",rel:"noopener noreferrer"}},[t._v("packages/contractkit/src/identity/claims/account.ts:36"),a("OutboundLink")],1)])]),t._v(" "),a("p",[a("strong",[t._v("Parameters:")])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Name")]),t._v(" "),a("th",[t._v("Type")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("address")])]),t._v(" "),a("td",[t._v("string")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("publicKey?")])]),t._v(" "),a("td",[t._v("undefined | string")])])])]),t._v(" "),a("p",[a("strong",[t._v("Returns:")]),t._v(" "),a("em",[a("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/reference/modules/_identity_claims_account_.html#accountclaim"}},[t._v("AccountClaim")])],1)])])}),[],!1,null,null,null);e.default=n.exports}}]);