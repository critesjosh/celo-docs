(window.webpackJsonp=window.webpackJsonp||[]).push([[341],{688:function(e,t,o){"use strict";o.r(t);var a=o(42),n=Object(a.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[o("h1",{attrs:{id:"general"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#general"}},[e._v("#")]),e._v(" General")]),e._v(" "),o("p",[e._v("Here you find some general information about integrations regardless of your service or use case:")]),e._v(" "),o("h2",{attrs:{id:"accessing-the-chain"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#accessing-the-chain"}},[e._v("#")]),e._v(" Accessing the chain")]),e._v(" "),o("p",[e._v("There are a myriad of ways through which you can access chain data:")]),e._v(" "),o("h3",{attrs:{id:"running-your-own-node"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#running-your-own-node"}},[e._v("#")]),e._v(" Running your own node")]),e._v(" "),o("p",[e._v("To be completely independent and have a reliable view into the latest chain data, you will likely want to run your own node(s).")]),e._v(" "),o("p",[e._v("You can just clone "),o("a",{attrs:{href:"https://github.com/celo-org/celo-blockchain",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("celo-blockchain")]),o("OutboundLink")],1),e._v(" and then run "),o("code",[e._v("make geth")]),e._v(" to receive the binary.")]),e._v(" "),o("p",[e._v("By default, "),o("code",[e._v("geth")]),e._v(" will use "),o("code",[e._v("/root/.celo")]),e._v(" as the data dir, if you would like to change that specify the "),o("code",[e._v("--datadir")]),e._v(" argument. For common testnets, we are hosting the genesis blocks under "),o("code",[e._v("https://www.googleapis.com/storage/v1/b/genesis_blocks/o/${NETWORK_NAME}\\?alt\\=media")]),e._v(". To initiate your datadir, run "),o("code",[e._v("geth init genesis.json")]),e._v(" to add the genesis block.")]),e._v(" "),o("p",[e._v("cLabs generally hosts bootnodes to help nodes discover each other on the network. You can fetch those under "),o("code",[e._v("https://www.googleapis.com/storage/v1/b/env_bootnodes/o/${NETWORK_NAME}\\?alt\\=media")]),e._v(".")]),e._v(" "),o("p",[e._v("The current network ID for the Alfajores testnet is "),o("code",[e._v("44787")]),e._v(", for the Baklava testnet it is "),o("code",[e._v("62320")]),e._v(".")]),e._v(" "),o("p",[e._v("This is all you should need to connect to a network:")]),e._v(" "),o("div",{staticClass:"language-bash extra-class"},[o("pre",{pre:!0,attrs:{class:"language-bash"}},[o("code",[e._v("geth --networkid "),o("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$NETWORK_ID")]),e._v(" --bootnodes "),o("span",{pre:!0,attrs:{class:"token variable"}},[e._v("$BOOTNODES")]),e._v("\n")])])]),o("p",[e._v("For more command line options, please see "),o("a",{attrs:{href:"https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://github.com/ethereum/go-ethereum/wiki/Command-Line-Options"),o("OutboundLink")],1)]),e._v(" "),o("h3",{attrs:{id:"forno"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#forno"}},[e._v("#")]),e._v(" Forno")]),e._v(" "),o("p",[e._v("Forno is a hosted node service for interacting with the Celo network. This allow the user to get connected to the Celo Blockchain without having to run its own node.")]),e._v(" "),o("p",[e._v("Can be used as an "),o("code",[e._v("Http Provider")]),e._v(" with "),o("code",[e._v("ContractKit")])]),e._v(" "),o("p",[e._v("As Forno is a public node you will have to sign transactions locally because with your own private key, because Forno doesn't store them. But don't worry, the "),o("code",[e._v("ContractKit")]),e._v(" will handle this for you.")]),e._v(" "),o("p",[e._v("Forno networks:")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("Alfajores = 'https://alfajores-forno.celo-testnet.org'\n\nBaklava = 'https://baklava-forno.celo-testnet.org'\n\nMainnet = 'https://rc1-forno.celo-testnet.org'\n")])])]),o("h3",{attrs:{id:"blockscout"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#blockscout"}},[e._v("#")]),e._v(" Blockscout")]),e._v(" "),o("p",[e._v("We also expose data on the cLabs run blockscout instance. Blockscout itself exposes an API.")]),e._v(" "),o("div",{staticClass:"language- extra-class"},[o("pre",{pre:!0,attrs:{class:"language-text"}},[o("code",[e._v("Alfajores = 'https://alfajores-blockscout.celo-testnet.org'\n\nBaklava = 'https://baklava-blockscout.celo-testnet.org'\n\nMainnet = 'https://explorer.celo.org/'\n")])])]),o("h2",{attrs:{id:"signing-transactions"}},[o("a",{staticClass:"header-anchor",attrs:{href:"#signing-transactions"}},[e._v("#")]),e._v(" Signing Transactions")]),e._v(" "),o("p",[e._v("Compared to Ethereum transaction, Celo transactions have 3 additional, optional fields:")]),e._v(" "),o("ul",[o("li",[o("code",[e._v("feeCurrency")]),e._v(" - Specifies the address of the currency in which fees should be paid. If "),o("code",[e._v("null")]),e._v(", the native token "),o("code",[e._v("CELO")]),e._v(" is assumed.")]),e._v(" "),o("li",[o("code",[e._v("gatewayFeeRecipient")]),e._v(" - As part of "),o("RouterLink",{attrs:{to:"/docs/celo-codebase/protocol/transactions/full-node-incentives.html"}},[e._v("Full Node Incentives")]),e._v(", light clients will need to specify the address of their gateway for it to forward the transactions onto the network.")],1),e._v(" "),o("li",[o("code",[e._v("gatewayFee")]),e._v(" - The value of the gateway fee.")])]),e._v(" "),o("p",[o("a",{attrs:{href:"../../celo-codebase/protocol/transactions"}},[e._v("Read more about Celo Transactions")])]),e._v(" "),o("p",[e._v("To sign transactions, you have the following options:")]),e._v(" "),o("ul",[o("li",[e._v("Use the JSON-RPC "),o("a",{attrs:{href:"https://github.com/ethereum/wiki/wiki/JSON-RPC#eth_sendtransaction",target:"_blank",rel:"noopener noreferrer"}},[o("code",[e._v("sendTransaction")]),o("OutboundLink")],1),e._v(" method to your node which would have the account in question unlocked. (Either manually or via a library such as "),o("code",[e._v("web3")]),e._v(")")]),e._v(" "),o("li",[e._v("Use "),o("RouterLink",{attrs:{to:"/docs/developer-resources/contractkit/"}},[e._v("ContractKit's")]),e._v(" local signing feature.")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);