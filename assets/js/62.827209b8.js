(window.webpackJsonp=window.webpackJsonp||[]).push([[62],{411:function(e,a,s){"use strict";s.r(a);var t=s(42),r=Object(t.a)({},(function(){var e=this,a=e.$createElement,s=e._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h2",{attrs:{id:"commands"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#commands"}},[e._v("#")]),e._v(" Commands")]),e._v(" "),s("h3",{attrs:{id:"authorize"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#authorize"}},[e._v("#")]),e._v(" Authorize")]),e._v(" "),s("p",[e._v('Keep your locked Gold more secure by authorizing alternative keys to be used for signing attestations, voting, or validating. By doing so, you can continue to participate in the protocol while keeping the key with access to your locked Gold in cold storage. You must include a "proof-of-possession" of the key being authorized, which can be generated with the "account:proof-of-possession" command.')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:authorize\n\nOPTIONS\n  -r, --role=vote|validator|attestation                (required) Role to delegate\n\n  --blsKey=0x                                          The BLS public key that the validator is using for consensus,\n                                                       should pass proof of possession. 96 bytes.\n\n  --blsPop=0x                                          The BLS public key proof-of-possession, which consists of a\n                                                       signature on the account address. 48 bytes.\n\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d    (required) Account Address\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)        Use a specific gas currency for transaction fees (defaults to\n                                                       'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                    [default: 1] If --useLedger is set, this will get the first N\n                                                       addresses for local signing\n\n  --ledgerConfirmAddress                               Set it to ask confirmation for the address of the transaction\n                                                       from the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses        [default: [0]] If --useLedger is set, this will get the array of\n                                                       index addresses for local signing. Example\n                                                       --ledgerCustomAddresses \"[4,99]\"\n\n  --signature=0x                                       (required) Signature (a.k.a proof-of-possession) of the signer\n                                                       key\n\n  --signer=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Account Address\n\n  --useLedger                                          Set it to use a ledger wallet\n\nEXAMPLES\n  authorize --from 0x5409ED021D9299bf6814279A6A1411A7e866A631 --role vote --signer\n  0x6ecbe1db9ef729cbe972c83fb886247691fb6beb --signature\n  0x1b9fca4bbb5bfb1dbe69ef1cddbd9b4202dcb6b134c5170611e1e36ecfa468d7b46c85328d504934fce6c2a1571603a50ae224d2b32685e84d4d\n  1a1eebad8452eb\n  authorize --from 0x5409ED021D9299bf6814279A6A1411A7e866A631 --role validator --signer\n  0x6ecbe1db9ef729cbe972c83fb886247691fb6beb --signature\n  0x1b9fca4bbb5bfb1dbe69ef1cddbd9b4202dcb6b134c5170611e1e36ecfa468d7b46c85328d504934fce6c2a1571603a50ae224d2b32685e84d4d\n  1a1eebad8452eb --blsKey\n  0x4fa3f67fc913878b068d1fa1cdddc54913d3bf988dbe5a36a20fa888f20d4894c408a6773f3d7bde11154f2a3076b700d345a42fd25a0e5e83f4\n  db5586ac7979ac2053cd95d8f2efd3e959571ceccaa743e02cf4be3f5d7aaddb0b06fc9aff00 --blsPop\n  0xcdb77255037eb68897cd487fdd85388cbda448f617f874449d4b11588b0b7ad8ddc20d9bb450b513bb35664ea3923900\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/authorize.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/authorize.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"balance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#balance"}},[e._v("#")]),e._v(" Balance")]),e._v(" "),s("p",[e._v("View Celo Dollar and Gold balances for an address")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:balance ADDRESS\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\nEXAMPLE\n  balance 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/balance.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/balance.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"claim-account"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claim-account"}},[e._v("#")]),e._v(" Claim-account")]),e._v(" "),s("p",[e._v("Claim another account, and optionally its public key, and add the claim to a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:claim-account FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --address=address                                  (required) The address of the account you want to claim\n\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --publicKey=publicKey                              The public key of the account that others may use to send you\n                                                     encrypted messages\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  claim-account ~/metadata.json --address 0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d --from\n  0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/claim-account.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/claim-account.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"claim-attestation-service-url"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claim-attestation-service-url"}},[e._v("#")]),e._v(" Claim-attestation-service-url")]),e._v(" "),s("p",[e._v("Claim the URL of the attestation service and add the claim to a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:claim-attestation-service-url FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --url=https://www.celo.org                         (required) The url you want to claim\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  claim-attestation-service-url ~/metadata.json --url http://test.com/myurl --from\n  0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/claim-attestation-service-url.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/claim-attestation-service-url.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"claim-domain"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claim-domain"}},[e._v("#")]),e._v(" Claim-domain")]),e._v(" "),s("p",[e._v("Claim a domain and add the claim to a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:claim-domain FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --domain=domain                                    (required) The domain you want to claim\n\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  claim-domain ~/metadata.json --domain test.com --from 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/claim-domain.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/claim-domain.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"claim-keybase"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claim-keybase"}},[e._v("#")]),e._v(" Claim-keybase")]),e._v(" "),s("p",[e._v("Claim a keybase username and add the claim to a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:claim-keybase FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --useLedger                                        Set it to use a ledger wallet\n\n  --username=username                                (required) The keybase username you want to claim\n\nEXAMPLE\n  claim-keybase ~/metadata.json --from 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95 --username myusername\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/claim-keybase.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/claim-keybase.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"claim-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claim-name"}},[e._v("#")]),e._v(" Claim-name")]),e._v(" "),s("p",[e._v("Claim a name and add the claim to a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:claim-name FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --name=name                                        (required) The name you want to claim\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  claim-name ~/metadata.json --from 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95 --name myname\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/claim-name.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/claim-name.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"claim-storage"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#claim-storage"}},[e._v("#")]),e._v(" Claim-storage")]),e._v(" "),s("p",[e._v("Claim a storage root and add the claim to a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:claim-storage FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --url=https://www.celo.org                         (required) The URL of the storage root you want to claim\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  claim-storage ~/metadata.json --url http://test.com/myurl --from 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/claim-storage.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/claim-storage.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"create-metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-metadata"}},[e._v("#")]),e._v(" Create-metadata")]),e._v(" "),s("p",[e._v("Create an empty identity metadata file. Use this metadata file to store claims attesting to ownership of off-chain resources. Claims can be generated with the account:claim-* commands.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:create-metadata FILE\n\nARGUMENTS\n  FILE  Path where the metadata should be saved\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account to set metadata for or an\n                                                     authorized signer for the address in the metadata\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  create-metadata ~/metadata.json --from 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/create-metadata.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/create-metadata.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"get-metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#get-metadata"}},[e._v("#")]),e._v(" Get-metadata")]),e._v(" "),s("p",[e._v("Show information about an address. Retreives the metadata URL for an account from the on-chain, then fetches the metadata file off-chain and verifies proofs as able.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:get-metadata ADDRESS\n\nARGUMENTS\n  ADDRESS  Address to get metadata for\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses              [default: 1] If --useLedger is set, this will get the first N addresses\n                                                 for local signing\n\n  --ledgerConfirmAddress                         Set it to ask confirmation for the address of the transaction from the\n                                                 ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses  [default: [0]] If --useLedger is set, this will get the array of index\n                                                 addresses for local signing. Example --ledgerCustomAddresses \"[4,99]\"\n\n  --useLedger                                    Set it to use a ledger wallet\n\nEXAMPLE\n  get-metadata 0x97f7333c51897469E8D98E7af8653aAb468050a3\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/get-metadata.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/get-metadata.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"list"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#list"}},[e._v("#")]),e._v(" List")]),e._v(" "),s("p",[e._v("List the addresses from the node and the local instance")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:list\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses              [default: 1] If --useLedger is set, this will get the first N addresses\n                                                 for local signing\n\n  --ledgerConfirmAddress                         Set it to ask confirmation for the address of the transaction from the\n                                                 ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses  [default: [0]] If --useLedger is set, this will get the array of index\n                                                 addresses for local signing. Example --ledgerCustomAddresses \"[4,99]\"\n\n  --[no-]local                                   If set, only show local and hardware wallet accounts. Use no-local to\n                                                 only show keystore addresses.\n\n  --useLedger                                    Set it to use a ledger wallet\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/list.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/list.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"lock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lock"}},[e._v("#")]),e._v(" Lock")]),e._v(" "),s("p",[e._v("Lock an account which was previously unlocked")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:lock ACCOUNT\n\nARGUMENTS\n  ACCOUNT  Account address\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\nEXAMPLE\n  lock 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/lock.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/lock.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"new"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#new"}},[e._v("#")]),e._v(" New")]),e._v(" "),s("p",[e._v("Creates a new account locally using the Celo Derivation Path (m/44'/52752'/0/changeIndex/addressIndex) and print out the key information. Save this information for local transaction signing or import into a Celo node. Ledger: this command has been tested swapping mnemonics with the Ledger successfully (only supports english)")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:new\n\nOPTIONS\n  --addressIndex=addressIndex\n      Choose the address index for the derivation path\n\n  --changeIndex=changeIndex\n      Choose the change index for the derivation path\n\n  --derivationPath=derivationPath\n      Choose a different derivation Path (Celo's default is \"m/44'/52752'/0'/0\"). Use \"eth\" as an alias of the Ethereum\n      derivation path (\"m/44'/60'/0'/0/\"). Recreating the same account requires knowledge of the mnemonic, passphrase (if\n      any), and the derivation path\n\n  --language=chinese_simplified|chinese_traditional|english|french|italian|japanese|korean|spanish\n      [default: english] Language for the mnemonic words. **WARNING**, some hardware wallets don't support other languages\n\n  --mnemonicPath=mnemonicPath\n      Instead of generating a new mnemonic (seed phrase), use the user-supplied mnemonic instead. Path to a file that\n      contains all the mnemonic words separated by a space (example: \"word1 word2 word3 ... word24\"). If the words are a\n      language other than English, the --language flag must be used. Only BIP39 mnemonics are supported\n\n  --passphrasePath=passphrasePath\n      Path to a file that contains the BIP39 passphrase to combine with the mnemonic specified using the mnemonicPath flag\n      and the index specified using the addressIndex flag. Every passphrase generates a different private key and wallet\n      address.\n\nEXAMPLES\n  new\n  new --passphrasePath myFolder/my_passphrase_file\n  new --language spanish\n  new --passphrasePath some_folder/my_passphrase_file --language japanese --addressIndex 5\n  new --passphrasePath some_folder/my_passphrase_file --mnemonicPath some_folder/my_mnemonic_file --addressIndex 5\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/new.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/new.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"offchain-read"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offchain-read"}},[e._v("#")]),e._v(" Offchain-read")]),e._v(" "),s("p",[e._v("DEV: Reads the name from offchain storage")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:offchain-read\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Account Address\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --name=name\n\n  --root=root\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  offchain-read --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/offchain-read.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/offchain-read.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"offchain-write"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#offchain-write"}},[e._v("#")]),e._v(" Offchain-write")]),e._v(" "),s("p",[e._v("DEV: Writes a name to offchain storage")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:offchain-write\n\nOPTIONS\n  --directory=directory                              (required) To which directory data should be written\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address with which to sign\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --name=name                                        (required)\n\n  --uploadWithGit                                    If the CLI should attempt to push changes to the origin via git\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLES\n  offchain-write --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n  offchain-write --from 0x5409ed021d9299bf6814279a6a1411a7e866a631 --name test-account\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/offchain-write.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/offchain-write.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"proof-of-possession"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#proof-of-possession"}},[e._v("#")]),e._v(" Proof-of-possession")]),e._v(" "),s("p",[e._v('Generate proof-of-possession to be used to authorize a signer. See the "account:authorize" command for more details.')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:proof-of-possession\n\nOPTIONS\n  --account=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account that needs to prove possession\n                                                        of the signer key.\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)         Use a specific gas currency for transaction fees (defaults to\n                                                        'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                     [default: 1] If --useLedger is set, this will get the first N\n                                                        addresses for local signing\n\n  --ledgerConfirmAddress                                Set it to ask confirmation for the address of the transaction\n                                                        from the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses         [default: [0]] If --useLedger is set, this will get the array of\n                                                        index addresses for local signing. Example\n                                                        --ledgerCustomAddresses \"[4,99]\"\n\n  --signer=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d   (required) Address of the signer key to prove possession of.\n\n  --useLedger                                           Set it to use a ledger wallet\n\nEXAMPLE\n  proof-of-possession --account 0x5409ed021d9299bf6814279a6a1411a7e866a631 --signer\n  0x6ecbe1db9ef729cbe972c83fb886247691fb6beb\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/proof-of-possession.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/proof-of-possession.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"recover-old"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#recover-old"}},[e._v("#")]),e._v(" Recover-old")]),e._v(" "),s("p",[e._v("Recovers the Valora old account and print out the key information. The old Valora app (in a beta state) generated the user address using a seed of 32 bytes, instead of 64 bytes. As the app fixed that, some old accounts were left with some funds. This command allows the user to recover those funds.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:recover-old\n\nOPTIONS\n  --addressIndex=addressIndex\n      Choose the address index for the derivation path\n\n  --changeIndex=changeIndex\n      Choose the change index for the derivation path\n\n  --derivationPath=derivationPath\n      Choose a different derivation Path (Celo's default is \"m/44'/52752'/0'/0\"). Use \"eth\" as an alias of the Ethereum\n      derivation path (\"m/44'/60'/0'/0/\"). Recreating the same account requires knowledge of the mnemonic, passphrase (if\n      any), and the derivation path\n\n  --language=chinese_simplified|chinese_traditional|english|french|italian|japanese|korean|spanish\n      [default: english] Language for the mnemonic words. **WARNING**, some hardware wallets don't support other languages\n\n  --mnemonicPath=mnemonicPath\n      (required) Path to a file that contains all the mnemonic words separated by a space (example: \"word1 word2 word3 ...\n      word24\"). If the words are a language other than English, the --language flag must be used. Only BIP39 mnemonics are\n      supported\n\n  --passphrasePath=passphrasePath\n      Path to a file that contains the BIP39 passphrase to combine with the mnemonic specified using the mnemonicPath flag\n      and the index specified using the addressIndex flag. Every passphrase generates a different private key and wallet\n      address.\n\nEXAMPLES\n  recover-old --mnemonicPath some_folder/my_mnemonic_file\n  recover-old --mnemonicPath some_folder/my_mnemonic_file --passphrasePath myFolder/my_passphrase_file\n  recover-old --mnemonicPath some_folder/my_mnemonic_file --language spanish\n  recover-old --mnemonicPath some_folder/my_mnemonic_file --passphrasePath some_folder/my_passphrase_file --language\n  japanese --addressIndex 5\n  recover-old --mnemonicPath some_folder/my_mnemonic_file --passphrasePath some_folder/my_passphrase_file --addressIndex\n  5\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/recover-old.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/recover-old.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"register"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register"}},[e._v("#")]),e._v(" Register")]),e._v(" "),s("p",[e._v("Register an account on-chain. This allows you to lock Gold, which is a pre-requisite for registering a Validator or Group, participating in Validator elections and on-chain Governance, and earning epoch rewards.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:register\n\nOPTIONS\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Account Address\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --name=name\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLES\n  register --from 0x5409ed021d9299bf6814279a6a1411a7e866a631\n  register --from 0x5409ed021d9299bf6814279a6a1411a7e866a631 --name test-account\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/register.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/register.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"register-metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#register-metadata"}},[e._v("#")]),e._v(" Register-metadata")]),e._v(" "),s("p",[e._v("Register metadata URL for an account where users will be able to retieve the metadata file and verify your claims")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:register-metadata\n\nOPTIONS\n  --force                                            Ignore metadata validity checks\n  --from=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Addess of the account to set metadata for\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)      Use a specific gas currency for transaction fees (defaults to\n                                                     'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                  [default: 1] If --useLedger is set, this will get the first N\n                                                     addresses for local signing\n\n  --ledgerConfirmAddress                             Set it to ask confirmation for the address of the transaction from\n                                                     the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses      [default: [0]] If --useLedger is set, this will get the array of\n                                                     index addresses for local signing. Example --ledgerCustomAddresses\n                                                     \"[4,99]\"\n\n  --url=https://www.celo.org                         (required) The url to the metadata you want to register\n\n  --useLedger                                        Set it to use a ledger wallet\n\nEXAMPLE\n  register-metadata --url https://www.mywebsite.com/celo-metadata --from 0x47e172F6CfB6c7D01C1574fa3E2Be7CC73269D95\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/register-metadata.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/register-metadata.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"set-name"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#set-name"}},[e._v("#")]),e._v(" Set-name")]),e._v(" "),s("p",[e._v("Sets the name of a registered account on-chain. An account's name is an optional human readable identifier")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:set-name\n\nOPTIONS\n  --account=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Account Address\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)         Use a specific gas currency for transaction fees (defaults to\n                                                        'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                     [default: 1] If --useLedger is set, this will get the first N\n                                                        addresses for local signing\n\n  --ledgerConfirmAddress                                Set it to ask confirmation for the address of the transaction\n                                                        from the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses         [default: [0]] If --useLedger is set, this will get the array of\n                                                        index addresses for local signing. Example\n                                                        --ledgerCustomAddresses \"[4,99]\"\n\n  --name=name                                           (required)\n\n  --useLedger                                           Set it to use a ledger wallet\n\nEXAMPLE\n  set-name --account 0x5409ed021d9299bf6814279a6a1411a7e866a631 --name test-account\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/set-name.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/set-name.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"show"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#show"}},[e._v("#")]),e._v(" Show")]),e._v(" "),s("p",[e._v("Show information for an account, including name, authorized vote, validator, and attestation signers, the URL at which account metadata is hosted, the address the account is using with the mobile wallet, and a public key that can be used to encrypt information for the account.")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:show ADDRESS\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses              [default: 1] If --useLedger is set, this will get the first N addresses\n                                                 for local signing\n\n  --ledgerConfirmAddress                         Set it to ask confirmation for the address of the transaction from the\n                                                 ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses  [default: [0]] If --useLedger is set, this will get the array of index\n                                                 addresses for local signing. Example --ledgerCustomAddresses \"[4,99]\"\n\n  --useLedger                                    Set it to use a ledger wallet\n\nEXAMPLE\n  show 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/show.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/show.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"show-claimed-accounts"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#show-claimed-accounts"}},[e._v("#")]),e._v(" Show-claimed-accounts")]),e._v(" "),s("p",[e._v("Show information about claimed accounts")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:show-claimed-accounts ADDRESS\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses              [default: 1] If --useLedger is set, this will get the first N addresses\n                                                 for local signing\n\n  --ledgerConfirmAddress                         Set it to ask confirmation for the address of the transaction from the\n                                                 ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses  [default: [0]] If --useLedger is set, this will get the array of index\n                                                 addresses for local signing. Example --ledgerCustomAddresses \"[4,99]\"\n\n  --useLedger                                    Set it to use a ledger wallet\n\nEXAMPLE\n  show-claimed-accounts 0x5409ed021d9299bf6814279a6a1411a7e866a631\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/show-claimed-accounts.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/show-claimed-accounts.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"show-metadata"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#show-metadata"}},[e._v("#")]),e._v(" Show-metadata")]),e._v(" "),s("p",[e._v("Show the data in a local metadata file")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:show-metadata FILE\n\nARGUMENTS\n  FILE  Path of the metadata file\n\nOPTIONS\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses              [default: 1] If --useLedger is set, this will get the first N addresses\n                                                 for local signing\n\n  --ledgerConfirmAddress                         Set it to ask confirmation for the address of the transaction from the\n                                                 ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses  [default: [0]] If --useLedger is set, this will get the array of index\n                                                 addresses for local signing. Example --ledgerCustomAddresses \"[4,99]\"\n\n  --useLedger                                    Set it to use a ledger wallet\n\nEXAMPLE\n  show-metadata ~/metadata.json\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/show-metadata.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/show-metadata.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"unlock"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unlock"}},[e._v("#")]),e._v(" Unlock")]),e._v(" "),s("p",[e._v("Unlock an account address to send transactions or validate blocks")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:unlock ACCOUNT\n\nARGUMENTS\n  ACCOUNT  Account address\n\nOPTIONS\n  --duration=duration                            Duration in seconds to leave the account unlocked. Unlocks until the\n                                                 node exits by default.\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)  Use a specific gas currency for transaction fees (defaults to 'auto'\n                                                 which uses whatever feeCurrency is available)\n\n  --password=password                            Password used to unlock the account. If not specified, you will be\n                                                 prompted for a password.\n\nEXAMPLES\n  unlock 0x5409ed021d9299bf6814279a6a1411a7e866a631\n  unlock 0x5409ed021d9299bf6814279a6a1411a7e866a631 --duration 600\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/unlock.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/unlock.ts"),s("OutboundLink")],1)])]),e._v(" "),s("h3",{attrs:{id:"verify-proof-of-possession"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#verify-proof-of-possession"}},[e._v("#")]),e._v(" Verify-proof-of-possession")]),e._v(" "),s("p",[e._v('Verify a proof-of-possession. See the "account:proof-of-possession" command for more details.')]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("USAGE\n  $ celocli account:verify-proof-of-possession\n\nOPTIONS\n  --account=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d  (required) Address of the account that needs to prove possession\n                                                        of the signer key.\n\n  --gasCurrency=(celo|CELO|cusd|cUSD|auto|Auto)         Use a specific gas currency for transaction fees (defaults to\n                                                        'auto' which uses whatever feeCurrency is available)\n\n  --ledgerAddresses=ledgerAddresses                     [default: 1] If --useLedger is set, this will get the first N\n                                                        addresses for local signing\n\n  --ledgerConfirmAddress                                Set it to ask confirmation for the address of the transaction\n                                                        from the ledger\n\n  --ledgerCustomAddresses=ledgerCustomAddresses         [default: [0]] If --useLedger is set, this will get the array of\n                                                        index addresses for local signing. Example\n                                                        --ledgerCustomAddresses \"[4,99]\"\n\n  --signature=0x                                        (required) Signature (a.k.a. proof-of-possession) of the signer\n                                                        key\n\n  --signer=0xc1912fEE45d61C87Cc5EA59DaE31190FFFFf232d   (required) Address of the signer key to verify proof of\n                                                        possession.\n\n  --useLedger                                           Set it to use a ledger wallet\n\nEXAMPLE\n  verify-proof-of-possession --account 0x199eDF79ABCa29A2Fa4014882d3C13dC191A5B58 --signer\n  0x0EdeDF7B1287f07db348997663EeEb283D70aBE7 --signature\n  0x1c5efaa1f7ca6484d49ccce76217e2fba0552c0b23462cff7ba646473bc2717ffc4ce45be89bd5be9b5d23305e87fc2896808467c4081d9524a8\n  4c01b89ec91ca3\n")])])]),s("p",[s("em",[e._v("See code: "),s("a",{attrs:{href:"https://github.com/celo-org/celo-monorepo/tree/master/packages/cli/src/commands/account/verify-proof-of-possession.ts",target:"_blank",rel:"noopener noreferrer"}},[e._v("packages/cli/src/commands/account/verify-proof-of-possession.ts"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);